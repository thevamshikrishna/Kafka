spring.application.name=KafkaSmsService

server.port=4041

# Context path
server.servlet.context-path=/kafka-MessagingApp


twilio.account.sid=ACbc1f7a3898128c481c3196d8c90f228f
twilio.auth.token=1abf29c105cedb025ff9f1781a84a413
twilio.from.number=+14472223427

#twilio.account.sid=${TWILIO_ACCOUNT_SID}
#twilio.auth.token=${TWILIO_AUTH_TOKEN}
#twilio.from.number=${TWILIO_FROM_NUMBER}


# Topic name
app.topic.name=tpc-2

# Producer properties (JSON support)
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer properties (JSON support)
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Admin config to create topics automatically
spring.kafka.admin.bootstrap-servers=localhost:9092
spring.kafka.admin.auto-create=true

## Mail Configuration
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=vamshikrishna42379@gmail.com
#spring.mail.password=onfsqpqrkbtqsssk
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## Receiver email (custom property for EmailService)
#app.mail.to=vamshikrishnaiam7@gmail.com